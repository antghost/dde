version: "3.8"
x-extra_hosts:
  &extra-hosts
  - "${MAGE_DOMAIN}:${DOCKER_IP}"

x-volumes:
  &default-volumes
  - &php-ini ./config/php/php.ini:/usr/local/etc/php/conf.d/zz-php.ini
  - &opcache-ini ./config/php/opcache.ini:/usr/local/etc/php/conf.d/zz-opcache.ini
  - &xdebug-ini ./config/php/xdebug.ini:/usr/local/etc/php/conf.d/zz-xdebug.ini
  - &php-fpm-ini ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
  - &composer /usr/local/bin/composer:/usr/local/bin/composer
  - &composer-cache ${COMPOSER_HOME}:/var/www/.composer:cached
  - &www ${SOURCE_DIR}:/var/www/html

x-service:
  &default-service
  restart: always
  networks:
    - default
  privileged: true

x-php_service:
  &php-service
  << : *default-service
  expose:
    - "9000"
  environment:
    TZ: ${TZ}
    COMPOSER_HOME: /var/www/.composer
    PHP_IDE_CONFIG: serverName=magento
  extra_hosts: *extra-hosts

services:
  mysql:
    << : *default-service
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${DATA_DIR}/mysql:/var/lib/mysql
      - ./config/mysql/conf.d:/etc/mysql/conf.d
    environment:
      TZ: ${TZ}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
    container_name: magento-mysql

  rabbitmq:
    << : *default-service
    image: rabbitmq:${RABBITMQ_VERSION}
    ports:
      - "${RABBITMQ_PORT_C}:5672"
      - "${RABBITMQ_PORT_S}:15672"
    volumes:
      - ${DATA_DIR}/rabbitmq:/var/lib/rabbitmq
    environment:
      TZ: ${TZ}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    container_name: magento-rabbitmq

  redis:
    << : *default-service
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - ${DATA_DIR}/redis:/data
      - ./config/redis/redis-${REDIS_VERSION}.conf:/etc/redis.conf
    environment:
      - TZ=${TZ}
    entrypoint: [ "redis-server", "/etc/redis.conf" ]
    command: --requirepass ${REDIS_PASSWORD}
    container_name: magento-redis

  es:
    << : *default-service
    image: elasticsearch:${ES_VERSION}
    ports:
      - "${ES_PORT}:9200"
    volumes:
      - ${DATA_DIR}/es:/usr/share/elasticsearch/data
    environment:
      - TZ=${TZ}
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    container_name: magento-es

  php81:
    << : *php-service
    build:
      context: ./dockerfiles
      dockerfile: ./php8/Dockerfile
      args:
        PHP_VERSION: ${PHP81_VERSION}
        SOURCES_MIRRORS: ${SOURCES_MIRRORS}
    image: ${PHP81_MAGE_IMAGE}
    volumes:
      - *php-ini
      - *opcache-ini
      - *xdebug-ini
      - *php-fpm-ini
      - *composer
      - *composer-cache
      - *www
      - ../logs/magento/php81:/var/log/php
    container_name: magento-php81

  php82: 
    << : *php-service
    build:
      context: ./dockerfiles
      dockerfile: ./php8/Dockerfile
      args:
        PHP_VERSION: ${PHP82_VERSION}
        SOURCES_MIRRORS: ${SOURCES_MIRRORS}
    image: ${PHP82_MAGE_IMAGE}
    volumes:
      - *php-ini
      - *opcache-ini
      - *xdebug-ini
      - *php-fpm-ini
      - *composer
      - *composer-cache
      - *www
      - ../logs/magento/php82:/var/log/php
    container_name: magento-php82

  php74:
    << : *php-service
    build:
      context: ./dockerfiles
      dockerfile: ./php7.4/Dockerfile
      args:
        PHP_VERSION: ${PHP74_VERSION}
        SOURCES_MIRRORS: ${SOURCES_MIRRORS}
    image: ${PHP74_MAGE_IMAGE}
    volumes:
      - *php-ini
      - *opcache-ini
      - *xdebug-ini
      - *php-fpm-ini
      - *composer
      - *composer-cache
      - *www
      - ../logs/magento/php74:/var/log/php    
    container_name: magento-php74

  php72:
    << : *php-service
    build:
      context: ./dockerfiles
      dockerfile: ./php7.2/Dockerfile
      args:
        PHP_VERSION: ${PHP72_VERSION}
        SOURCES_MIRRORS: ${SOURCES_MIRRORS}
    image: ${PHP72_MAGE_IMAGE}
    volumes:
      - *php-ini
      - *opcache-ini
      - *xdebug-ini
      - *php-fpm-ini
      - *composer
      - *composer-cache
      - *www
      - ../logs/magento/php72:/var/log/php
    container_name: magento-php72

  nginx:
    << : *default-service
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_PORT}:80"
      - 443:443
    volumes:
      - *www
      - ../www/wordpress:/var/www/html/wordpress
      # 配置文件
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ../logs/magento/nginx:/var/log/nginx
    environment:
      TZ: ${TZ}
    container_name: magento-nginx
    depends_on:
      - php81
      - php82
      - php74
      - php72

networks:
  default:
    name: magento
