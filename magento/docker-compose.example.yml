version: "3.8"
services:
    db: # 'db' is service name
        image: mysql:${MYSQL_VERSION}
        ports:
            - "${MYSQL_PORT}:3306"
        volumes:
            - ${DATA_DIR}/mysql:/var/lib/mysql
            # 使用数据卷, 把下一行的注释去掉，把上一行注释掉
            # - dbdata:/var/lib/mysql
            - ./config/mysql/conf.d:/etc/mysql/conf.d:rw
        environment:
            TZ: ${TZ}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        command:
            --default-authentication-plugin=mysql_native_password
            --character-set-server=utf8mb4
            --collation-server=utf8mb4_unicode_ci
        # env_file: ../env/db.env
        restart: always
        networks:
            - default
        container_name: magento-mysql8
    rabbitmq:
        image: rabbitmq:${RABBITMQ_VERSION}
        ports:
            - "${RABBITMQ_PORT_C}:5672"
            - "${RABBITMQ_PORT_S}:15672"
        volumes:
            - ${DATA_DIR}/rabbitmq:/var/lib/rabbitmq
            # 使用数据卷, 把下一行的注释去掉，把上一行注释掉
            # - rabbitmqdata:/var/lib/rabbitmq
        environment:
            TZ: ${TZ}
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        networks:
            - default
        restart: always
        container_name: magento-rabbitmq
    redis:
        image: redis:${REDIS_VERSION}
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - ${DATA_DIR}/redis:/data
            # 使用数据卷, 把下一行的注释去掉，把上一行注释掉
            # - redisdata:/data
            - ./config/redis/redis.conf:/etc/redis.conf:rw
        environment:
            - TZ=${TZ}
        entrypoint: [ "redis-server", "/etc/redis.conf" ]
        # command: redis-server /etc/redis.conf --requirepass ${REDIS_PASSWORD}
        command: --requirepass ${REDIS_PASSWORD}
        networks:
            - default
        restart: always
        container_name: magento-redis
    es:
        image: elasticsearch:${ES_VERSION}
        ports:
            - "${ES_PORT_C}:9200"
            - "${ES_PORT_S}:9300"
        volumes:
            - ${DATA_DIR}/es:/usr/share/elasticsearch/data
            # 使用数据卷, 把下一行的注释去掉，把上一行注释掉
            # - esdata:/usr/share/elasticsearch/data
            - ./config/es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        environment:
            - TZ=${TZ}
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        restart: always
        networks:
            - default
        container_name: magento-es
    php81:
        build:
            context: ./dockerfiles
            dockerfile: ./php8/Dockerfile
            args:
                PHP_VERSION: ${PHP81_VERSION}
                SOURCES_MIRRORS: ${SOURCES_MIRRORS}
        image: ${PHP81_MAGE_IMAGE}
        expose:
            - "9000"
        volumes:
            # &phpvolumes `YAML语法`内容赋值给phpvolumes变量; 引用变量：*phpvolumes
            &phpvolumes
            # 配置文件
            - ./config/php/custom-php.ini:/usr/local/etc/php/conf.d/zz-php.ini
            - ./config/php/custom-php-fpm.conf:/usr/local/etc/php-fpm.d/zz-docker.conf
            # 挂载本机`composer`执行文件和home目录
            - /usr/local/bin/composer:/usr/local/bin/composer
            - ${COMPOSER_HOME}:/var/www/.composer:cached
            # 挂载本机项目到`/var/www/html`中
            - ${SOURCE_DIR}:/var/www/html
        environment:
            - TZ=${TZ}
            - COMPOSER_HOME=/var/www/.composer
        extra_hosts: &appextrahosts
            - "${MAGE_DOMAIN}:${DOCKER_IP}"
        networks:
            - default
        restart: always
        container_name: magento-php81
    php82:
        build:
            context: ./dockerfiles
            dockerfile: ./php8/Dockerfile
            args:
                PHP_VERSION: ${PHP82_VERSION}
                SOURCES_MIRRORS: ${SOURCES_MIRRORS}
        image: ${PHP82_MAGE_IMAGE}
        expose:
            - "9000"
        volumes: *phpvolumes
        extra_hosts: *appextrahosts
        networks:
            - default
        restart: always
        container_name: magento-php82  
    php74:
        build:
            context: ./dockerfiles
            dockerfile: ./php7.4/Dockerfile
            args:
                PHP_VERSION: ${PHP74_VERSION}
                SOURCES_MIRRORS: ${SOURCES_MIRRORS}
        image: ${PHP74_MAGE_IMAGE}
        expose:
            - "9000"
        volumes: *phpvolumes
        environment:
            - TZ=${TZ}
            - COMPOSER_HOME=/var/www/.composer
        extra_hosts: *appextrahosts
        networks:
            - default
        restart: always
        container_name: magento-php74
    php72:
        build:
            context: ./dockerfiles
            dockerfile: ./php7.2/Dockerfile
            args:
                PHP_VERSION: ${PHP72_VERSION}
                SOURCES_MIRRORS: ${SOURCES_MIRRORS}
        image: ${PHP72_MAGE_IMAGE}
        expose:
            - "9000"
        volumes: *phpvolumes
        environment:
            - TZ=${TZ}
            - COMPOSER_HOME=/var/www/.composer
        extra_hosts: *appextrahosts
        networks:
            - default
        restart: always
        container_name: magento-php72
    nginx:
        image: nginx:${NGINX_VERSION}
        ports:
            - "${NGINX_PORT}:80"
            - "${NGINX_SSL_PORT}:443"
        volumes:
            # 挂载本机项目到`/var/www/html`中
            - ${SOURCE_DIR}:/var/www/html
            # 配置文件
            - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./config/nginx/conf.d:/etc/nginx/conf.d
            - ../log/nginx/mage:/var/log/nginx
        environment:
            - TZ=${TZ}
        networks:
            - default
        restart: always
        container_name: magento-nginx
        depends_on:
            - php81
            - php74
            - php72
            # - db
            # - redis
            # - es
networks:
    default:
volumes:
    dbdata:
    esdata:
    redisdata:
    rabbitmqdata:
